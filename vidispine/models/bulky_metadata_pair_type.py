# coding: utf-8

"""
    Vidispine API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 5.x
    Contact: info@vidispine.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six
from . import *

class BulkyMetadataPairType(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'item_track': 'str',
        'end': 'str',
        'stream': 'int',
        'start': 'str',
        'value': 'str',
        'maps': 'BulkyMapListType',
        'key': 'str',
        'channel': 'int'
    }

    attribute_map = {
        'item_track': 'itemTrack',
        'end': 'end',
        'stream': 'stream',
        'start': 'start',
        'value': 'value',
        'maps': 'maps',
        'key': 'key',
        'channel': 'channel'
    }

    def __init__(self, item_track=None, end=None, stream=None, start=None, value=None, maps=None, key=None, channel=None):  # noqa: E501
        """BulkyMetadataPairType - a model defined in OpenAPI"""  # noqa: E501

        self._item_track = None
        self._end = None
        self._stream = None
        self._start = None
        self._value = None
        self._maps = None
        self._key = None
        self._channel = None
        self.discriminator = None

        if item_track is not None:
            self.item_track = item_track
        if end is not None:
            self.end = end
        if stream is not None:
            self.stream = stream
        if start is not None:
            self.start = start
        if value is not None:
            self.value = value
        if maps is not None:
            self.maps = maps
        self.key = key
        if channel is not None:
            self.channel = channel

    @property
    def item_track(self):
        """Gets the item_track of this BulkyMetadataPairType.  # noqa: E501


        :return: The item_track of this BulkyMetadataPairType.  # noqa: E501
        :rtype: str
        """
        return self._item_track

    @item_track.setter
    def item_track(self, item_track):
        """Sets the item_track of this BulkyMetadataPairType.


        :param item_track: The item_track of this BulkyMetadataPairType.  # noqa: E501
        :type: str
        """

        self._item_track = item_track

    @property
    def end(self):
        """Gets the end of this BulkyMetadataPairType.  # noqa: E501


        :return: The end of this BulkyMetadataPairType.  # noqa: E501
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this BulkyMetadataPairType.


        :param end: The end of this BulkyMetadataPairType.  # noqa: E501
        :type: str
        """

        self._end = end

    @property
    def stream(self):
        """Gets the stream of this BulkyMetadataPairType.  # noqa: E501


        :return: The stream of this BulkyMetadataPairType.  # noqa: E501
        :rtype: int
        """
        return self._stream

    @stream.setter
    def stream(self, stream):
        """Sets the stream of this BulkyMetadataPairType.


        :param stream: The stream of this BulkyMetadataPairType.  # noqa: E501
        :type: int
        """

        self._stream = stream

    @property
    def start(self):
        """Gets the start of this BulkyMetadataPairType.  # noqa: E501


        :return: The start of this BulkyMetadataPairType.  # noqa: E501
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this BulkyMetadataPairType.


        :param start: The start of this BulkyMetadataPairType.  # noqa: E501
        :type: str
        """

        self._start = start

    @property
    def value(self):
        """Gets the value of this BulkyMetadataPairType.  # noqa: E501


        :return: The value of this BulkyMetadataPairType.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this BulkyMetadataPairType.


        :param value: The value of this BulkyMetadataPairType.  # noqa: E501
        :type: str
        """

        self._value = value

    @property
    def maps(self):
        """Gets the maps of this BulkyMetadataPairType.  # noqa: E501


        :return: The maps of this BulkyMetadataPairType.  # noqa: E501
        :rtype: BulkyMapListType
        """
        return self._maps

    @maps.setter
    def maps(self, maps):
        """Sets the maps of this BulkyMetadataPairType.


        :param maps: The maps of this BulkyMetadataPairType.  # noqa: E501
        :type: BulkyMapListType
        """

        self._maps = maps

    @property
    def key(self):
        """Gets the key of this BulkyMetadataPairType.  # noqa: E501


        :return: The key of this BulkyMetadataPairType.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this BulkyMetadataPairType.


        :param key: The key of this BulkyMetadataPairType.  # noqa: E501
        :type: str
        """
        if key is None:
            raise ValueError("Invalid value for `key`, must not be `None`")  # noqa: E501

        self._key = key

    @property
    def channel(self):
        """Gets the channel of this BulkyMetadataPairType.  # noqa: E501


        :return: The channel of this BulkyMetadataPairType.  # noqa: E501
        :rtype: int
        """
        return self._channel

    @channel.setter
    def channel(self, channel):
        """Sets the channel of this BulkyMetadataPairType.


        :param channel: The channel of this BulkyMetadataPairType.  # noqa: E501
        :type: int
        """

        self._channel = channel

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BulkyMetadataPairType):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
