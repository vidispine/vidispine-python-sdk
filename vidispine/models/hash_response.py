# coding: utf-8

"""
    Vidispine API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 5.x
    Contact: info@vidispine.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six
from . import *

class HashResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'function': 'str',
        'error': 'str',
        'hash': 'str',
        'id': 'str',
        'uri': 'str'
    }

    attribute_map = {
        'function': 'function',
        'error': 'error',
        'hash': 'hash',
        'id': 'id',
        'uri': 'uri'
    }

    def __init__(self, function=None, error=None, hash=None, id=None, uri=None):  # noqa: E501
        """HashResponse - a model defined in OpenAPI"""  # noqa: E501

        self._function = None
        self._error = None
        self._hash = None
        self._id = None
        self._uri = None
        self.discriminator = None

        self.function = function
        if error is not None:
            self.error = error
        if hash is not None:
            self.hash = hash
        self.id = id
        self.uri = uri

    @property
    def function(self):
        """Gets the function of this HashResponse.  # noqa: E501


        :return: The function of this HashResponse.  # noqa: E501
        :rtype: str
        """
        return self._function

    @function.setter
    def function(self, function):
        """Sets the function of this HashResponse.


        :param function: The function of this HashResponse.  # noqa: E501
        :type: str
        """
        if function is None:
            raise ValueError("Invalid value for `function`, must not be `None`")  # noqa: E501

        self._function = function

    @property
    def error(self):
        """Gets the error of this HashResponse.  # noqa: E501


        :return: The error of this HashResponse.  # noqa: E501
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this HashResponse.


        :param error: The error of this HashResponse.  # noqa: E501
        :type: str
        """

        self._error = error

    @property
    def hash(self):
        """Gets the hash of this HashResponse.  # noqa: E501


        :return: The hash of this HashResponse.  # noqa: E501
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this HashResponse.


        :param hash: The hash of this HashResponse.  # noqa: E501
        :type: str
        """

        self._hash = hash

    @property
    def id(self):
        """Gets the id of this HashResponse.  # noqa: E501


        :return: The id of this HashResponse.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HashResponse.


        :param id: The id of this HashResponse.  # noqa: E501
        :type: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def uri(self):
        """Gets the uri of this HashResponse.  # noqa: E501


        :return: The uri of this HashResponse.  # noqa: E501
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this HashResponse.


        :param uri: The uri of this HashResponse.  # noqa: E501
        :type: str
        """
        if uri is None:
            raise ValueError("Invalid value for `uri`, must not be `None`")  # noqa: E501

        self._uri = uri

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, HashResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
